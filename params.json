{"name":"Clubcos","tagline":"Clubcos - Clubc Operating System","body":"### Clubcos - Clubc Operating System\r\n\r\nClubcos is my hand-made operating system, which will be used for my os-dev lecture.\r\n\r\nYou can clone Clubcos like this:\r\n\r\n```\r\n$ git clone https://github.com/dlarudgus20/Clubcos\r\n```\r\n\r\n### Table of Contents\r\n\r\n[License](#license)\r\n\r\n[Prerequisites](##prerequisites)\r\n\r\n[How to build](#build)\r\n\r\n[How to build cross-compiler](#cross-compiler)\r\n\r\n[Troubleshooting](#troubleshooting)\r\n\r\n<a name=\"license\" />\r\n### License\r\n\r\nClubcos is under The BSD (2-Clause) License.\r\n\r\n<a name=\"prerequisites\" />\r\n### Prerequisites\r\n\r\nmake\r\n\r\nbinutils, **which is cross-compiled for i686-pc-elf**\r\n\r\ngcc upper 4.8.x, **which is cross-compiled for i686-pc-elf**\r\n\r\nnasm upper 2.11\r\n\r\npython\r\n\r\n<hr/>\r\n\r\nqemu (for `make run`)\r\n\r\nbochsdbg (for `make run_bochs`)\r\n\r\n<a name=\"build\" />\r\n### How to build\r\n\r\n**Notice:** Before you try to build, you must build [cross-compiler](#cross-compiler)\r\n\r\nAnd you also need qemu for `make run`, and bochsdbg for `make run_bochs`\r\n\r\n<hr/>\r\n\r\nFirst, clone this repository:\r\n\r\n    git clone https://github.com/dlarudgus20/Clubcos.git\r\n\r\nSecond, just make it!\r\n\r\n    make\r\n\r\nNotice that default configuration is Debug mode, so you should specify configuration if you want to build Release mode.\r\n\r\n    make CONFIG=Release\r\n\r\nIf the cross-compiler is not in PATH environmental variable, you should specify its path.\r\n\r\n    # Notice that it MUST contain target triplet prefix (e.g. i686-pc-elf)\r\n    make TARGET_PREFIX=\"/usr/local/cross/bin/i686-pc-elf\"\r\n\r\n<a name=\"cross-compiler\" />\r\n### How to build cross compiler\r\n\r\nBefore building, you need **cross compiler** for i686-pc-elf to build Clubcos.\r\n\r\nFirst, install prerequisites for gcc and binutils. [links](https://gcc.gnu.org/install/prerequisites.html)\r\n\r\nEspecially, you need these:\r\n\r\n```\r\nbison\r\nflex\r\nlibgmp-dev\r\nlibmpfr-dev\r\nlibmpc-dev\r\n\r\n# optional\r\nisl\r\ncloog\r\n```\r\n\r\nDownload source of [gcc](https://gcc.gnu.org/) and [binutils](http://www.gnu.org/software/binutils/).\r\nAnd, follow this script to build.\r\n\r\n(In my example script, I assume that both gcc and binutils are in `/usr/src`.)\r\n\r\n```\r\nexport TARGET=i686-pc-elf\r\nexport PREFIX=<where-to-install-cross-compiler>\r\nexport PATH=\"$PREFIX/bin:$PATH\"\r\n\r\ncd /usr/src\r\nmkdir build-binutils\r\ncd build-binutikls\r\n\r\n../binutils-x.y.z/configure --prefix=\"$PREFIX\" --target=$TARGET --disable-nls --disable-shared\r\nmake\r\nmake install\r\n\r\ncd ..\r\nmkdir build-gcc\r\ncd build-gcc\r\n\r\n../gcc-x.y.z/configure --prefix=\"$PREFIX\" --target=$TARGET --disable-nls --enable-language=c --without-headers --disable-shared\r\nmake all-gcc\r\nmake all-target-libgcc\r\nmake install-gcc\r\nmake install-target-libgcc\r\n```\r\n\r\n<a name=\"troubleshooting\" />\r\n### Troubleshooting\r\n\r\n> **can't input arrow keys**\r\n\r\n  qemu has an bug of transform arrow keys to 2/4/6/8 keys of keypad. Turn off NumLock, and use 2/4/6/8 of keypad.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}